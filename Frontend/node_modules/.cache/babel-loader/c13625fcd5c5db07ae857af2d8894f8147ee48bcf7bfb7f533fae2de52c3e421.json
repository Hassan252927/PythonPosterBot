{"ast":null,"code":"var _jsxFileName = \"G:\\\\HassanReact\\\\TestProject\\\\poster-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [outputImages, setOutputImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const uploadAndGenerate = async () => {\n    if (!image) {\n      alert(\"Please select an image first.\");\n      a;\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    try {\n      const response = await fetch(\"http://localhost:5001/generate\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      console.log(\"Backend Response:\", data);\n      if (!response.ok) throw new Error(data.error || \"Unknown error occurred\");\n      setTitle(data.title);\n      setDescription(data.description);\n      setOutputImages(data.output_files);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Upload failed: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Book Poster Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadAndGenerate,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nXHERtnpL2TGlueOVK7Vg6rSf4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","title","setTitle","description","setDescription","outputImages","setOutputImages","loading","setLoading","handleFileChange","event","target","files","uploadAndGenerate","alert","a","formData","FormData","append","response","fetch","method","body","data","json","console","log","ok","Error","error","output_files","message","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["G:/HassanReact/TestProject/poster-generator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n    const [image, setImage] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [outputImages, setOutputImages] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const handleFileChange = (event) => {\n        setImage(event.target.files[0]);\n    };\n\n    const uploadAndGenerate = async () => {\n        if (!image) {\n            alert(\"Please select an image first.\");a\n            return;\n        }\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append(\"image\", image);\n\n        try {\n            const response = await fetch(\"http://localhost:5001/generate\", {\n                method: \"POST\",\n                body: formData\n            });\n\n            const data = await response.json();\n            console.log(\"Backend Response:\", data);\n\n            if (!response.ok) throw new Error(data.error || \"Unknown error occurred\");\n\n            setTitle(data.title);\n            setDescription(data.description);\n            setOutputImages(data.output_files);\n        } catch (error) {\n            console.error(\"Error uploading image:\", error);\n            alert(\"Upload failed: \" + error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\" }}>\n            <h1>Dynamic Book Poster Generator</h1>\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} /><br/>\n            <button onClick={uploadAndGenerate} disabled={loading}>\n                {loading ? \"Generating...\" : \"Generate Posters\"}\n            </button>\n            <h2>{title}</h2>\n            <p>{description}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}