{"ast":null,"code":"var _jsxFileName = \"G:\\\\HassanReact\\\\PythonPosterBot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [outputImages, setOutputImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Handle file input change\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    console.log(\"Selected file: \", file); // Debugging: log selected file\n    setImage(file);\n  };\n\n  // Upload the image and request the generation of posters\n  const uploadAndGenerate = async () => {\n    if (!image) {\n      alert(\"Please select an image first.\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    try {\n      // Update the URL to match the backend route and ensure it's HTTPS\n      console.log(\"Sending request to the backend...\");\n      const response = await fetch(\"http://127.0.0.1:5001/generate_posters\", {\n        method: \"POST\",\n        body: formData\n      });\n      console.log(\"Backend response status:\", response.status); // Debugging: log status\n      const data = await response.json();\n      console.log(\"Backend Response Data:\", data); // Debugging: log response data\n\n      if (!response.ok) throw new Error(data.error || \"Unknown error occurred\");\n      setTitle(data.title);\n      setDescription(data.description);\n      setOutputImages(data.output_files);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Upload failed: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Arial, sans-serif\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Book Poster Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange,\n      style: {\n        padding: \"10px\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadAndGenerate,\n      disabled: loading,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\",\n        fontSize: \"16px\"\n      },\n      children: loading ? \"Generating...\" : \"Generate Posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"18px\",\n        fontStyle: \"italic\"\n      },\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        gap: \"20px\"\n      },\n      children: outputImages.map((image, index) => {\n        console.log(`Displaying poster: ${image}`); // Debugging: log each poster\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Poster \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:5001/static/output/${image}`,\n            alt: `Poster ${index + 1}`,\n            style: {\n              width: \"100%\",\n              maxWidth: \"400px\",\n              border: \"2px solid #ccc\",\n              boxShadow: \"2px 2px 10px rgba(0,0,0,0.2)\",\n              borderRadius: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nXHERtnpL2TGlueOVK7Vg6rSf4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","title","setTitle","description","setDescription","outputImages","setOutputImages","loading","setLoading","handleFileChange","event","file","target","files","console","log","uploadAndGenerate","alert","formData","FormData","append","response","fetch","method","body","status","data","json","ok","Error","error","output_files","message","style","textAlign","fontFamily","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","fontSize","onClick","disabled","marginTop","fontStyle","display","flexWrap","justifyContent","gap","map","index","src","alt","width","maxWidth","border","boxShadow","borderRadius","_c","$RefreshReg$"],"sources":["G:/HassanReact/PythonPosterBot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n    const [image, setImage] = useState(null);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [outputImages, setOutputImages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Handle file input change\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        console.log(\"Selected file: \", file);  // Debugging: log selected file\r\n        setImage(file);\r\n    };\r\n\r\n    // Upload the image and request the generation of posters\r\n    const uploadAndGenerate = async () => {\r\n        if (!image) {\r\n            alert(\"Please select an image first.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n\r\n        try {\r\n            // Update the URL to match the backend route and ensure it's HTTPS\r\n            console.log(\"Sending request to the backend...\");\r\n            const response = await fetch(\"http://127.0.0.1:5001/generate_posters\", {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n\r\n            console.log(\"Backend response status:\", response.status);  // Debugging: log status\r\n            const data = await response.json();\r\n            console.log(\"Backend Response Data:\", data);  // Debugging: log response data\r\n\r\n            if (!response.ok) throw new Error(data.error || \"Unknown error occurred\");\r\n\r\n            setTitle(data.title);\r\n            setDescription(data.description);\r\n            setOutputImages(data.output_files);\r\n        } catch (error) {\r\n            console.error(\"Error uploading image:\", error);\r\n            alert(\"Upload failed: \" + error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", fontFamily: \"Arial, sans-serif\", padding: \"20px\" }}>\r\n            <h1>Dynamic Book Poster Generator</h1>\r\n\r\n            {/* File input for image */}\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                style={{ padding: \"10px\", fontSize: \"16px\" }}\r\n            /><br/>\r\n\r\n            {/* Button to trigger the poster generation */}\r\n            <button\r\n                onClick={uploadAndGenerate}\r\n                disabled={loading}\r\n                style={{ marginTop: \"10px\", padding: \"10px\", fontSize: \"16px\" }}\r\n            >\r\n                {loading ? \"Generating...\" : \"Generate Posters\"}\r\n            </button>\r\n\r\n            {/* Display the generated title and description */}\r\n            {title && <h2 style={{ marginTop: \"20px\" }}>{title}</h2>}\r\n            {description && <p style={{ fontSize: \"18px\", fontStyle: \"italic\" }}>{description}</p>}\r\n\r\n            {/* Display Generated Posters */}\r\n            <div\r\n                style={{\r\n                    marginTop: \"20px\",\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    justifyContent: \"center\",\r\n                    gap: \"20px\"\r\n                }}\r\n            >\r\n                {outputImages.map((image, index) => {\r\n                    console.log(`Displaying poster: ${image}`);  // Debugging: log each poster\r\n                    return (\r\n                        <div key={index} style={{ textAlign: \"center\" }}>\r\n                            <h4>Poster {index + 1}</h4>\r\n                            <img\r\n                                src={`http://127.0.0.1:5001/static/output/${image}`}\r\n                                alt={`Poster ${index + 1}`}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    maxWidth: \"400px\",\r\n                                    border: \"2px solid #ccc\",\r\n                                    boxShadow: \"2px 2px 10px rgba(0,0,0,0.2)\",\r\n                                    borderRadius: \"10px\"\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}